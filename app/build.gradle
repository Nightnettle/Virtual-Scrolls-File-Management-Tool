/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    jcenter()
}

javafx {
    version = "17.0.8"
    modules = [ 'javafx.controls', 'javafx.fxml']
}

dependencies {
    // This dependency is used by the application.
    implementation libs.guava
    implementation "mysql:mysql-connector-java:8.0.33"
    implementation 'de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2'
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.10.3')
	        sources {
		        java {
	    		    srcDirs = ['src/test/java']
		        }
            }
        }
    }
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        csv.required = false
        xml.required = false
        html.required = true
    }
    afterEvaluate { // to exclude classes / packages from coverage
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: ['vsas/controller/**',
			'org/gradle/accessors/dm/**']) // exclude UI controller files
        }))
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'vsas.App'
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

build {
    dependsOn jacocoTestReport
}
